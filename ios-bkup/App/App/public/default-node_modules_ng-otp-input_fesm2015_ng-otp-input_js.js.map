{"version":3,"file":"default-node_modules_ng-otp-input_fesm2015_ng-otp-input_js.js","mappings":"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","sources":["./node_modules/ng-otp-input/fesm2015/ng-otp-input.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass KeyboardUtil {\r\n    static ifBackspaceOrDelete(event) {\r\n        return this.ifKey(event, 'Backspace;Delete;Del');\r\n    }\r\n    static ifRightArrow(event) {\r\n        return this.ifKey(event, 'ArrowRight;Right');\r\n    }\r\n    static ifLeftArrow(event) {\r\n        return this.ifKey(event, 'ArrowLeft;Left');\r\n    }\r\n    static ifSpacebar(event) {\r\n        return this.ifKey(event, 'Spacebar; '); //don't remove the space after ; as this will check for space key\r\n    }\r\n    static ifKey(event, keys) {\r\n        let keysToCheck = keys.split(';');\r\n        return keysToCheck.some(k => k === event.key);\r\n    }\r\n}\n\nclass KeysPipe {\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\r\n/** @nocollapse */ KeysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\n/** @nocollapse */ KeysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, name: \"keys\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'keys'\r\n                }]\r\n        }] });\n\nclass NgOtpInputComponent {\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    get inputType() {\r\n        var _a, _b;\r\n        return ((_a = this.config) === null || _a === void 0 ? void 0 : _a.isPasswordInput)\r\n            ? 'password'\r\n            : ((_b = this.config) === null || _b === void 0 ? void 0 : _b.allowNumbersOnly)\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.otpForm.valueChanges.subscribe((v) => {\r\n            this.keysPipe.transform(this.otpForm.controls).forEach((k) => {\r\n                var val = this.otpForm.controls[k].value;\r\n                if (val && val.length > 1) {\r\n                    if (val.length >= this.config.length) {\r\n                        this.setValue(val);\r\n                    }\r\n                    else {\r\n                        this.rebuildValue();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    onKeyDown($event, inputIdx) {\r\n        if (KeyboardUtil.ifSpacebar($event)) {\r\n            $event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n    onInput($event) {\r\n        let newVal = this.currentVal ? `${this.currentVal}${$event.target.value}` : $event.target.value;\r\n        if (this.config.allowNumbersOnly && !this.validateNumber(newVal)) {\r\n            $event.target.value = '';\r\n            $event.stopPropagation();\r\n            $event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n    onKeyUp($event, inputIdx) {\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (KeyboardUtil.ifRightArrow($event)) {\r\n            $event.preventDefault();\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (KeyboardUtil.ifLeftArrow($event)) {\r\n            $event.preventDefault();\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        if (KeyboardUtil.ifBackspaceOrDelete($event) && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidKeyCode($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    validateNumber(val) {\r\n        return val && /^\\d*\\.?\\d*$/.test(val);\r\n    }\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout(() => {\r\n                ele.setSelectionRange(0, 1);\r\n            }, 0);\r\n        }\r\n    }\r\n    ifValidKeyCode(event) {\r\n        const inp = event.key;\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)));\r\n    }\r\n    focusTo(eleId) {\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        });\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    rebuildValue() {\r\n        var _a;\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                let ctrlVal = this.otpForm.controls[k].value;\r\n                let isLengthExceed = ctrlVal.length > 1;\r\n                let isCaseTransformEnabled = !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase() == 'lower');\r\n                ctrlVal = ctrlVal[0];\r\n                let transformedVal = isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase() : ctrlVal;\r\n                if (isCaseTransformEnabled && transformedVal == ctrlVal) {\r\n                    isCaseTransformEnabled = false;\r\n                }\r\n                else {\r\n                    ctrlVal = transformedVal;\r\n                }\r\n                val += ctrlVal;\r\n                if (isLengthExceed || isCaseTransformEnabled) {\r\n                    this.otpForm.controls[k].setValue(ctrlVal);\r\n                }\r\n            }\r\n        });\r\n        if ((_a = this.formCtrl) === null || _a === void 0 ? void 0 : _a.setValue) {\r\n            this.formCtrl.setValue(val);\r\n        }\r\n        this.onInputChange.emit(val);\r\n        this.currentVal = val;\r\n    }\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData || (this.config.allowNumbersOnly && !this.validateNumber(pastedData))) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\r\n/** @nocollapse */ NgOtpInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputComponent, deps: [{ token: KeysPipe }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ NgOtpInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NgOtpInputComponent, selector: \"ng-otp-input\", inputs: { config: \"config\", formCtrl: \"formCtrl\" }, outputs: { onInputChange: \"onInputChange\" }, ngImport: i0, template: \"<div class=\\\"ng-otp-input-wrapper wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input (paste)=\\\"handlePaste($event)\\\" [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\"  [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [ngStyle]=\\\"config.inputStyles\\\" \\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"one-time-code\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" #inp id=\\\"otp_{{i}}_{{componentKey}}\\\" \\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\" (input)=\\\"onInput($event)\\\" (keydown)=\\\"onKeyDown($event,i)\\\" >\\r\\n</div>\", styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.ng-otp-input-wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input{width:30px;font-size:18px;height:30px}}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], pipes: { \"keys\": KeysPipe } });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    // tslint:disable-next-line: component-selector\r\n                    selector: 'ng-otp-input',\r\n                    templateUrl: './ng-otp-input.component.html',\r\n                    styleUrls: ['./ng-otp-input.component.scss']\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: KeysPipe }]; }, propDecorators: { config: [{\r\n                type: Input\r\n            }], onInputChange: [{\r\n                type: Output\r\n            }], formCtrl: [{\r\n                type: Input\r\n            }] } });\n\nclass NgOtpInputModule {\r\n}\r\n/** @nocollapse */ NgOtpInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ NgOtpInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, declarations: [NgOtpInputComponent, KeysPipe], imports: [CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule], exports: [NgOtpInputComponent] });\r\n/** @nocollapse */ NgOtpInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, providers: [KeysPipe], imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule\r\n                    ],\r\n                    declarations: [NgOtpInputComponent, KeysPipe],\r\n                    exports: [NgOtpInputComponent],\r\n                    providers: [KeysPipe]\r\n                }]\r\n        }] });\n\nclass Config {\r\n}\n\n/*\r\n * Public API Surface of ng-otp-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgOtpInputComponent, Config as NgOtpInputConfig, NgOtpInputModule };\n"],"names":["i0","Pipe","EventEmitter","Component","Input","Output","NgModule","i3","FormGroup","FormControl","FormsModule","ReactiveFormsModule","i2","CommonModule","KeyboardUtil","ifBackspaceOrDelete","event","ifKey","ifRightArrow","ifLeftArrow","ifSpacebar","keys","keysToCheck","split","some","k","key","KeysPipe","transform","value","Object","ɵfac","ɵpipe","type","args","name","NgOtpInputComponent","constructor","keysPipe","config","length","onInputChange","inputControls","Array","componentKey","Math","random","toString","substring","Date","getTime","inputType","_a","_b","isPasswordInput","allowNumbersOnly","ngOnInit","otpForm","index","addControl","getControlName","valueChanges","subscribe","v","controls","forEach","val","setValue","rebuildValue","ngAfterViewInit","disableAutoFocus","containerItem","document","getElementById","ele","getElementsByClassName","focus","idx","onKeyDown","$event","inputIdx","preventDefault","onInput","newVal","currentVal","target","validateNumber","stopPropagation","onKeyUp","nextInputId","appendKey","prevInputId","setSelected","ifValidKeyCode","test","id","eleId","focusTo","setSelectionRange","setTimeout","inp","isMobile","navigator","userAgent","allowKeyCodes","includes","keyCode","isNaN","reset","replace","from","c","get","indexOfElementToFocus","ctrlVal","isLengthExceed","isCaseTransformEnabled","letterCase","toLocaleLowerCase","transformedVal","toUpperCase","toLowerCase","formCtrl","emit","handlePaste","e","clipboardData","window","pastedData","getData","ɵcmp","NgIf","NgStyle","NgForOf","DefaultValueAccessor","PatternValidator","NgControlStatus","FormControlDirective","selector","templateUrl","styleUrls","NgOtpInputModule","ɵmod","ɵinj","imports","declarations","exports","providers","Config","NgOtpInputConfig"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}