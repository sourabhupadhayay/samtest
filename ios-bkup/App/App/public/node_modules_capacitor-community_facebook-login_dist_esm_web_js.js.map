{"version":3,"file":"node_modules_capacitor-community_facebook-login_dist_esm_web_js.js","mappings":";;;;;;;;;;;;;;;;AAA4C;AACrC,MAAMC,gBAAgB,SAASD,sDAAS,CAAC;EAC5CE,WAAW,GAAG;IACV,KAAK,CAAC;MACFC,IAAI,EAAE,eAAe;MACrBC,SAAS,EAAE,CAAC,KAAK;IACrB,CAAC,CAAC;EACN;EACAC,UAAU,CAACC,OAAO,EAAE;IAChB,MAAMC,cAAc,GAAG;MAAEC,OAAO,EAAE;IAAQ,CAAC;IAC3C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,IAAI;QACA,OAAO,IAAI,CAACC,UAAU,CAACN,OAAO,CAACO,MAAM,CAAC,CAACC,IAAI,CAAC,MAAM;UAC9CC,EAAE,CAACC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,cAAc,CAAC,EAAED,OAAO,CAAC,CAAC;UAClEI,OAAO,EAAE;QACb,CAAC,CAAC;MACN,CAAC,CACD,OAAOS,GAAG,EAAE;QACRR,MAAM,CAACQ,GAAG,CAAC;MACf;IACJ,CAAC,CAAC;EACN;EACAP,UAAU,CAACC,MAAM,EAAE;IACf,IAAI,OAAOO,QAAQ,KAAK,WAAW,EAAE;MACjC,OAAOX,OAAO,CAACC,OAAO,EAAE;IAC5B;IACA,MAAMW,QAAQ,GAAG,IAAI;IACrB,MAAMC,QAAQ,GAAGF,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACG,cAAc,CAACF,QAAQ,CAAC;IACtG,IAAIC,QAAQ,EAAE;MACV,OAAOb,OAAO,CAACC,OAAO,EAAE;IAC5B;IACA,MAAMc,IAAI,GAAGJ,QAAQ,CAACK,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,MAAM,GAAGN,QAAQ,CAACO,aAAa,CAAC,QAAQ,CAAC;IAC/C,OAAO,IAAIlB,OAAO,CAACC,OAAO,IAAI;MAC1BgB,MAAM,CAACE,KAAK,GAAG,IAAI;MACnBF,MAAM,CAACG,KAAK,GAAG,IAAI;MACnBH,MAAM,CAACI,EAAE,GAAGT,QAAQ;MACpBK,MAAM,CAACK,MAAM,GAAG,MAAM;QAClBrB,OAAO,EAAE;MACb,CAAC;MACDgB,MAAM,CAACM,GAAG,GAAI,gCAA+BnB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAG,OAAQ,SAAQ;MAC7GW,IAAI,CAACS,WAAW,CAACP,MAAM,CAAC;IAC5B,CAAC,CAAC;EACN;EACMQ,KAAK,CAAC5B,OAAO,EAAE;IAAA;MACjB6B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE9B,OAAO,CAAC;MAC9C,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCI,EAAE,CAACmB,KAAK,CAACG,QAAQ,IAAI;UACjBF,OAAO,CAACG,KAAK,CAAC,UAAU,EAAED,QAAQ,CAAC;UACnC,IAAIA,QAAQ,CAACE,MAAM,KAAK,WAAW,EAAE;YACjC7B,OAAO,CAAC;cACJ8B,WAAW,EAAE;gBACTC,KAAK,EAAEJ,QAAQ,CAACK,YAAY,CAACF;cACjC;YACJ,CAAC,CAAC;UACN,CAAC,MACI;YACD7B,MAAM,CAAC;cACH6B,WAAW,EAAE;gBACTC,KAAK,EAAE;cACX;YACJ,CAAC,CAAC;UACN;QACJ,CAAC,EAAE;UAAEE,KAAK,EAAErC,OAAO,CAACsC,WAAW,CAACC,IAAI,CAAC,GAAG;QAAE,CAAC,CAAC;MAChD,CAAC,CAAC;IAAC;EACP;EACMC,MAAM,GAAG;IAAA;MACX,OAAO,IAAIrC,OAAO,CAACC,OAAO,IAAI;QAC1BK,EAAE,CAAC+B,MAAM,CAAC,MAAMpC,OAAO,EAAE,CAAC;MAC9B,CAAC,CAAC;IAAC;EACP;EACMqC,WAAW,GAAG;IAAA;MAChB,OAAO,IAAItC,OAAO,CAACC,OAAO,IAAI;QAC1BK,EAAE,CAACgC,WAAW,CAACC,EAAE,IAAItC,OAAO,CAACsC,EAAE,CAAC,CAAC;MACrC,CAAC,CAAC;IAAC;EACP;EACMC,qBAAqB,GAAG;IAAA;MAC1B,OAAO,IAAIxC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCI,EAAE,CAACmC,cAAc,CAACb,QAAQ,IAAI;UAC1B,IAAIA,QAAQ,CAACE,MAAM,KAAK,WAAW,EAAE;YACjC,MAAMY,MAAM,GAAG;cACXX,WAAW,EAAE;gBACTY,aAAa,EAAEC,SAAS;gBACxBC,mBAAmB,EAAE,EAAE;gBACvBC,OAAO,EAAEF,SAAS;gBAClBG,SAAS,EAAEH,SAAS;gBACpBI,WAAW,EAAEJ,SAAS;gBACtBT,WAAW,EAAE,EAAE;gBACfH,KAAK,EAAEJ,QAAQ,CAACK,YAAY,CAACF,WAAW;gBACxCkB,MAAM,EAAErB,QAAQ,CAACK,YAAY,CAACiB;cAClC;YACJ,CAAC;YACDjD,OAAO,CAACyC,MAAM,CAAC;UACnB,CAAC,MACI;YACDxC,MAAM,CAAC;cACH6B,WAAW,EAAE;gBACTC,KAAK,EAAE;cACX;YACJ,CAAC,CAAC;UACN;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IAAC;EACP;EACMmB,UAAU,CAACtD,OAAO,EAAE;IAAA;MACtB,MAAMuD,MAAM,GAAGvD,OAAO,CAACuD,MAAM,CAAChB,IAAI,CAAC,GAAG,CAAC;MACvC,OAAO,IAAIpC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCI,EAAE,CAAC+C,GAAG,CAAC,KAAK,EAAE;UAAED;QAAO,CAAC,EAAExB,QAAQ,IAAI;UAClC,IAAIA,QAAQ,CAAC0B,KAAK,EAAE;YAChBpD,MAAM,CAAC0B,QAAQ,CAAC0B,KAAK,CAACC,OAAO,CAAC;YAC9B;UACJ;UACAtD,OAAO,CAAC2B,QAAQ,CAAC;QACrB,CAAC,CAAC;MACN,CAAC,CAAC;IAAC;EACP;AACJ","sources":["./node_modules/@capacitor-community/facebook-login/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class FacebookLoginWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'FacebookLogin',\n            platforms: ['web'],\n        });\n    }\n    initialize(options) {\n        const defaultOptions = { version: 'v10.0' };\n        return new Promise((resolve, reject) => {\n            try {\n                return this.loadScript(options.locale).then(() => {\n                    FB.init(Object.assign(Object.assign({}, defaultOptions), options));\n                    resolve();\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    loadScript(locale) {\n        if (typeof document === 'undefined') {\n            return Promise.resolve();\n        }\n        const scriptId = 'fb';\n        const scriptEl = document === null || document === void 0 ? void 0 : document.getElementById(scriptId);\n        if (scriptEl) {\n            return Promise.resolve();\n        }\n        const head = document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n        return new Promise(resolve => {\n            script.defer = true;\n            script.async = true;\n            script.id = scriptId;\n            script.onload = () => {\n                resolve();\n            };\n            script.src = `https://connect.facebook.net/${locale !== null && locale !== void 0 ? locale : 'en_US'}/sdk.js`;\n            head.appendChild(script);\n        });\n    }\n    async login(options) {\n        console.log('FacebookLoginWeb.login', options);\n        return new Promise((resolve, reject) => {\n            FB.login(response => {\n                console.debug('FB.login', response);\n                if (response.status === 'connected') {\n                    resolve({\n                        accessToken: {\n                            token: response.authResponse.accessToken,\n                        },\n                    });\n                }\n                else {\n                    reject({\n                        accessToken: {\n                            token: null,\n                        },\n                    });\n                }\n            }, { scope: options.permissions.join(',') });\n        });\n    }\n    async logout() {\n        return new Promise(resolve => {\n            FB.logout(() => resolve());\n        });\n    }\n    async reauthorize() {\n        return new Promise(resolve => {\n            FB.reauthorize(it => resolve(it));\n        });\n    }\n    async getCurrentAccessToken() {\n        return new Promise((resolve, reject) => {\n            FB.getLoginStatus(response => {\n                if (response.status === 'connected') {\n                    const result = {\n                        accessToken: {\n                            applicationId: undefined,\n                            declinedPermissions: [],\n                            expires: undefined,\n                            isExpired: undefined,\n                            lastRefresh: undefined,\n                            permissions: [],\n                            token: response.authResponse.accessToken,\n                            userId: response.authResponse.userID,\n                        },\n                    };\n                    resolve(result);\n                }\n                else {\n                    reject({\n                        accessToken: {\n                            token: null,\n                        },\n                    });\n                }\n            });\n        });\n    }\n    async getProfile(options) {\n        const fields = options.fields.join(',');\n        return new Promise((resolve, reject) => {\n            FB.api('/me', { fields }, response => {\n                if (response.error) {\n                    reject(response.error.message);\n                    return;\n                }\n                resolve(response);\n            });\n        });\n    }\n}\n"],"names":["WebPlugin","FacebookLoginWeb","constructor","name","platforms","initialize","options","defaultOptions","version","Promise","resolve","reject","loadScript","locale","then","FB","init","Object","assign","err","document","scriptId","scriptEl","getElementById","head","getElementsByTagName","script","createElement","defer","async","id","onload","src","appendChild","login","console","log","response","debug","status","accessToken","token","authResponse","scope","permissions","join","logout","reauthorize","it","getCurrentAccessToken","getLoginStatus","result","applicationId","undefined","declinedPermissions","expires","isExpired","lastRefresh","userId","userID","getProfile","fields","api","error","message"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}